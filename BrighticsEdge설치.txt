=========================================================================================================
Edge Computing 설치 =======================================================================================
=========================================================================================================
0.1 계정 정보
 - centos7-notebook1 : smcs1 / smcs1234
 
0.2 hostname 설정
 - /etc/hosts에 hostname이 설정되어 있어야 디바이스의 edge-agent가 정상 동작함.
   --> /etc/hosts에 없는 경우 디바이스 상세화면 클릭 시 REST 오류 발생
   
0.3 device name 및 배포 명에 "-"(하이픈) 사용하지 않도록.
   --> "-" 사용 시 배포 상세에서 새로고침하여도 상태 갱신되지 않는 문제 있음.
   --> 현재 버전은 사용해도 되는 것 같음
    
0.4 DB
============================================
	dbType 		oracle 
	url 		jdbc:oracle:thin:@17.91.240.35:1522/edgeserverdb (천안)
	url 		jdbc:oracle:thin:@17.6.190.57:1522/EDGEDB (울산)
	dsEncType 	PLAIN 
	username 	edgedb 
	password 	P@ssw0rd
============================================
 
1. 도커 및 서버 환경 구축을 위한 패키지파일 업로드
1-1. vdi 파일 local 다운로드
	C:\WORKSPACES\EdgeInstallFiles
		-----------------------------------------------------------------
		edge-installer.z01
		edge-installer.zip
	K:\My files\_PROJECT_\71. PoC 프로젝트\평택 PoC	
		-----------------------------------------------------------------
		PoC Device 설치.txt
		linux_install_files.zip
		PoC 서버 설치.txt


1-1. 서버에 업로드
		-----------------------------------------------------------------
		biot-edge-installer-2.9.0-20200110.025137-25-200110-02.tgz
		docker-ce_18.06.3_ce_3-0_ubuntu_amd64.deb
		edge-db.tgz
		libltdl7_2.4.6-2_amd64.deb*
		libwrap0_7.6.q-27_amd64.deb
		-----------------------------------------------------------------

Ubuntu ==================================================================================
2. docker-ce 설치
2-1. dependency 관련 libltdl7_2.4.6-2_amd64.deb 설치
	edge2@edge_server2:~/temp$ sudo dpkg -i libltdl7_2.4.6-2_amd64.deb
	Selecting previously unselected package libltdl7:amd64.
	(Reading database ... 64250 files and directories currently installed.)
	Preparing to unpack libltdl7_2.4.6-2_amd64.deb ...
	Unpacking libltdl7:amd64 (2.4.6-2) ...
	Setting up libltdl7:amd64 (2.4.6-2) ...
	Processing triggers for libc-bin (2.27-3ubuntu1) ...
	
2-2. docker-ce 설치
	edge2@edge_server2:~/temp$ sudo dpkg -i docker-ce_18.06.3_ce_3-0_ubuntu_amd64.deb
	Selecting previously unselected package docker-ce.
	(Reading database ... 64257 files and directories currently installed.)
	Preparing to unpack docker-ce_18.06.3_ce_3-0_ubuntu_amd64.deb ...
	Unpacking docker-ce (18.06.3~ce~3-0~ubuntu) ...
	Setting up docker-ce (18.06.3~ce~3-0~ubuntu) ...
	Created symlink /etc/systemd/system/multi-user.target.wants/docker.service → /lib/systemd/system/docker.service.
	Created symlink /etc/systemd/system/sockets.target.wants/docker.socket → /lib/systemd/system/docker.socket.
	Processing triggers for ureadahead (0.100.0-21) ...
	Processing triggers for systemd (237-3ubuntu10.38) ...
	Processing triggers for man-db (2.8.3-2ubuntu0.1) ...
	
2-3. docker 그룹 추가 및 서비스 restart
	edge2@edge_server2:~/temp$ sudo usermod -aG docker edgeap
	edge2@edge_server2:~/temp$ sudo service docker restart
	
2-4. 세션 다시 시작 --> putty 재 시작

CentOS ==========================================================================================
2-1. docker 관련 denpendency 설치(containerd.io-1.2.4-3.1.el7.x86_64.rpm)
	root@cm3edg02:/home/edgeap/edge/docker-ce# sudo yum install containerd.io-1.2.4-3.1.el7.x86_64.rpm
			Loaded plugins: ulninfo
			Examining containerd.io-1.2.4-3.1.el7.x86_64.rpm: containerd.io-1.2.4-3.1.el7.x86_64
			Marking containerd.io-1.2.4-3.1.el7.x86_64.rpm to be installed
			Resolving Dependencies
			--> Running transaction check
			---> Package containerd.io.x86_64 0:1.2.4-3.1.el7 will be installed
			--> Finished Dependency Resolution

			Dependencies Resolved

			================================================================================================================================================================================================================================================
			 Package                                               Arch                                           Version                                                 Repository                                                                   Size
			================================================================================================================================================================================================================================================
			Installing:
			 containerd.io                                         x86_64                                         1.2.4-3.1.el7                                           /containerd.io-1.2.4-3.1.el7.x86_64                                          89 M

			Transaction Summary
			================================================================================================================================================================================================================================================
			Install  1 Package

			Total size: 89 M
			Installed size: 89 M
			Is this ok [y/d/N]: y
			Downloading packages:
			Running transaction check
			Running transaction test
			Transaction test succeeded
			Running transaction
			  Installing : containerd.io-1.2.4-3.1.el7.x86_64                                                                                                                                                                                           1/1
			  Verifying  : containerd.io-1.2.4-3.1.el7.x86_64                                                                                                                                                                                           1/1

			Installed:
			  containerd.io.x86_64 0:1.2.4-3.1.el7

			Complete!
			root@cm3edg02:/home/edgeap/edge/docker-ce#

2-2. docker 관련 denpendency 설치(container-selinux-2.107-3.el7.noarch.rpm)
	root@cm3edg02:/home/edgeap/edge/docker-ce# yum install container-selinux-2.107-3.el7.noarch.rpm
			Loaded plugins: ulninfo
			Examining container-selinux-2.107-3.el7.noarch.rpm: 2:container-selinux-2.107-3.el7.noarch
			Marking container-selinux-2.107-3.el7.noarch.rpm to be installed
			Resolving Dependencies
			--> Running transaction check
			---> Package container-selinux.noarch 2:2.107-3.el7 will be installed
			--> Finished Dependency Resolution

			Dependencies Resolved

			================================================================================================================================================================================================================================================
			 Package                                                  Arch                                          Version                                              Repository                                                                    Size
			================================================================================================================================================================================================================================================
			Installing:
			 container-selinux                                        noarch                                        2:2.107-3.el7                                        /container-selinux-2.107-3.el7.noarch                                         40 k

			Transaction Summary
			================================================================================================================================================================================================================================================
			Install  1 Package

			Total size: 40 k
			Installed size: 40 k
			Is this ok [y/d/N]: y
			Downloading packages:
			Running transaction check
			Running transaction test
			Transaction test succeeded
			Running transaction
			  Installing : 2:container-selinux-2.107-3.el7.noarch                                                                                                                                                                                       1/1
			setsebool:  SELinux is disabled.
			  Verifying  : 2:container-selinux-2.107-3.el7.noarch                                                                                                                                                                                       1/1

			Installed:
			  container-selinux.noarch 2:2.107-3.el7

			Complete!
			root@cm3edg02:/home/edgeap/edge/docker-ce#

2-3. docker-ce 설치 
	bledgema1:edgeap:/app/edge/linux_install> sudo yum install docker-ce-18.06*.rpm
 
2-4. docker 서비스 등록 및 시작
	bledgema1:edgeap:/app/edge/linux_install> sudo systemctl start docker
	
	bledgema1:edgeap:/app/edge/linux_install> sudo systemctl enable docker
	Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.

2-5. docker 그룹 추가 및 서비스 restart
	edge2@edge_server2:~/temp$ sudo usermod -aG docker edgeap
	edge2@edge_server2:~/temp$ sudo service docker restart
2-6. 세션 다시 시작 --> putty 재 시작

===========================================================================================

( 필요 시 )
2-7. docker 저장소 이동 필요 (/ 용량 부족 현상 발생) 
  --> 울산 redhat인 경우 변경되지 않음. 하지만 /var 용량이 커서 무시해도 됨.
====================================================================================
2-7-1. Ubuntu인 경우
* 기존 docker는 데이터를 /var/lib/docker에 저장되어 용량 부족의 error가 발생될 수 있으므로 사용자 계정의 디렉토리로 저장소를 이동한다.

==> https://jybaek.tistory.com/797 참고하여 이동 처리.
--------------------------------------------------------------------------
1) 데어터 경로 확인
	bledgema1:edgeap:/app/edge/linux_install> sudo docker info | grep Root
	WARNING: bridge-nf-call-iptables is disabled
	WARNING: bridge-nf-call-ip6tables is disabled
	Docker Root Dir: /var/lib/docker

2) docker 데몬 확인
	bledgema1:edgeap:/app/edge/linux_install> ps -ef | grep dockerd
	root     14973     1  0 09:50 ?        00:00:00 /usr/bin/dockerd
	edgeap   16397 10253  0 09:54 pts/0    00:00:00 grep --color=auto dockerd

3) docker -help로 --data-root 변경이 가능한지, 기본 경로가 /var/lib/docker인지 확인 
	bledgema1:edgeap:/app/edge/linux_install> dockerd --help
	...
	  --data-root string                        Root directory of persistent Docker state (default "/var/lib/docker")
	...
	
4) 서비스 기동 시 수정할 docker.service 확인
	bledgema1:edgeap:/app/edge/linux_install> sudo service docker status
	Redirecting to /bin/systemctl status docker.service
	● docker.service - Docker Application Container Engine
		Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; vendor preset: disabled)
		Active: active (running) since Tue 2020-05-19 09:50:01 KST; 6min ago
		Docs: https://docs.docker.com
		Main PID: 14973 (dockerd)
		CGroup: /system.slice/docker.service
				├─14973 /usr/bin/dockerd
				└─14985 docker-containerd --config /var/run/docker/containerd/containerd.toml

	--> "/lib/systemd/system/docker.service"를 통해서 서비스가 실행됨을 알 수 있음.
	
5) vi로 docker.service 파일을 열어서 --data-root 추가
5-0) 파일 수정 내용
	ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
	--> 
	ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --data-root=/app/docker_data
5-1) /lib/systemd/system/docker.service 파일 수정
	vi /lib/systemd/system/docker.service

6) dockerd 재시작
	sudo service docker stop
	sudo service docker start
	
7) 도커 데이터 경로 변경 확인
	$ docker info | grep Root
	Docker Root Dir: /app/docker_data
--------------------------------------------------------------------------
====================================================================================

2-7-2. RedHat 계열인 경우
1) docker service stop
	edgeap@cm3edg02:~$ sudo systemctl stop docker.service
	
2) docker data 디렉토리 생성
	edgeap@cm3edg02:~$ sudo mkdir -p /home/edgeap/docker_data
	
3) 서비스 파일 수정
	edgeap@cm3edg02:~$ sudo vi /usr/lib/systemd/system/docker.service
	기존 : ExecStart=/usr/bin/dockerd
	수정 : ExecStart=/usr/bin/dockerd -g /home/edgeap/docker_data
	
4) 서비스 리로드	
	edgeap@cm3edg02:~$ sudo systemctl daemon-reload
	
4) 서비스 시작	
	edgeap@cm3edg02:~$ sudo systemctl start docker.service

====================================================================================


외부 DB 설치시 SKIP ================================================================
3. db docker load
3-1. /home/pgdata 디렉토리 생성
	edge2@edge_server2:/home$ sudo mkdir pgdata
3-2. db docker load
	docker load < edge-db.tar
3-3. db docker run	
	edge2@edge_server2:/home$ docker run -d --restart="always" -p 5432:5432 -e POSTGRES_PASSWORD="1234" -e PGDATA=/var/lib/postgresql/data/pgdata -v /home/pgdata:/var/lib/postgresql/data/ sds.redii.net/biot/postgres:10.2-alpine
===============================================================================



4. 통합 installer file 압축 해제
	edge2@edge_server2:~/edge_install_files$ tar -xzvf biot-edge-installer-xxx.tgz



5. install Properties 설정
5-1. 위에서 압출 풀린 디렉토리로 이동하여 intall.properties 파일을 vi로 열어서 환경에 맞도록 수정한다.
============================================
	dbType 		oracle 
	url 		jdbc:oracle:thin:@17.91.240.31:1522/edgeserverdb (천안)
	url 		jdbc:oracle:thin:@17.6.190.57:1522/EDGEDB (울산)
	dsEncType 	PLAIN 
	username 	edgedb 
	password 	P@ssw0rd
============================================


6. 통합 install 스크립트 실행 및 registry 상태 확인
6-0. installer 스크립트 오류 수정(tgar -> tar) : (2.install.sh스크립트 파일의 325 line을 확인하여 오류가 있는 경우)
6-1. 통합 installer 스크립트 실행
	edge2@edge_server2:~/edge_install_files/biot-edge-installer-2.9.0-SNAPSHOT$ ./2.install.sh
	
6-2. registry 상태 확인
				edge2@edge_server2:~/edge_install_files/biot-edge-installer-2.9.0-SNAPSHOT$ docker ps
				CONTAINER ID        IMAGE                                     COMMAND                  CREATED             STATUS              PORTS                    NAMES
				e9d29140a06e        registry:2.5                              "/entrypoint.sh /etc…"   5 minutes ago       Up 5 minutes        0.0.0.0:5000->5000/tcp   registry
(docker DB인 경우)	821bc351832b        sds.redii.net/biot/postgres:10.2-alpine   "docker-entrypoint.s…"   13 minutes ago      Up 13 minutes       0.0.0.0:5432->5432/tcp   zen_shannon


	
7. update-certs 스크립트 실행 및 docker swarm init 수행
7-0. install.properties 파일에 설정한 설치 디렉토리로 이동.
	edge2@edge_server2:cd /app/apps/sdiedge
7-1. update-certs 스크립트 실행.
	bledgema1:edgeap:/app/apps/sdiedge ./update-certs.sh
	
7-2. 스크립트 수행 중 Fail이 발생하면 docer swarm init 수행
	edge2@edge_server2:~/apps/demoedge$ docker swarm init
	
7-3. 스크립트 실행 후 "Deploy SUCCESS" 결과 확인
====================================================================================
	edgeap@cm3edg02:~/apps/sdiedge$ ./update-certs.sh
	########################### RedHat OS
	Redirecting to /bin/systemctl restart docker.service
	JAVA_OPTS:
	WARNING! Using --password via the CLI is insecure. Use --password-stdin.
	WARNING! Your password will be stored unencrypted in /home/edgeap/.docker/config.json.
	Configure a credential helper to remove this warning. See
	https://docs.docker.com/engine/reference/commandline/login/#credentials-store

	Login Succeeded
	2.8.5: Pulling from biot/edge-central
	Digest: sha256:3858f6d238faab6423f793da57281ab57d0fb7b6b8f84f568ecbcfa4ae0c3d8d
	Status: Image is up to date for 17.91.240.35:5000/biot/edge-central:2.8.5
	2.8.5: Pulling from biot/edge-web
	Digest: sha256:a464e93664b37ecfb3c1f144c012e32a08566c5095e121eb04631392fc2a9ad1
	Status: Image is up to date for 17.91.240.35:5000/biot/edge-web:2.8.5
	############################ docker stack deploy
	Creating network edge_default
	Creating service edge_manager
	Creating service edge_web
	############################ Deploy SUCCESS
====================================================================================

7-4. edge-central 상태 확인
====================================================================================
bledgema1:edgeap:/app/apps/sdiedge> docker ps
CONTAINER ID        IMAGE                                      COMMAND                  CREATED             STATUS              PORTS                    NAMES
8dc4ffb8808c        17.6.190.57:5000/biot/edge-web:2.8.5       "/entrypoint.sh"         18 seconds ago      Up 17 seconds       80/tcp                   edge_web.1.3ysv8kzqly2bbhjqhgqokskp5
f00df08c394e        17.6.190.57:5000/biot/edge-central:2.8.5   "/entrypoint.sh"         18 seconds ago      Up 17 seconds                                edge_manager.1.971tk350vaf036qq6b0qngtwc
68035c9965d6        registry:2.5                               "/entrypoint.sh /etc…"   3 minutes ago       Up 32 seconds       0.0.0.0:5000->5000/tcp   registry
bledgema1:edgeap:/app/apps/sdiedge>
====================================================================================

8. web server docker 배포 및 edge-web 수행 여부 확인
8-1. edge-web 배포
====================================================================================
	edge2@edge_server2:~/apps/demoedge$ ./deploy_web.sh
	latest: Pulling from biot/edge-web
	Digest: sha256:011bb501169ad741fb909b35d3abf09b88a3bd99906dc192dec2cbd5fd79a320
	Status: Downloaded newer image for 192.168.0.173:5000/biot/edge-web:latest
	Error: No such container: edge-web
	f3c035cd2b126cfb20629229c4948e36c01b10ad505eaaa6d74ac40bb2205a50
====================================================================================

8-2. edge-web 수행 여부 확인
====================================================================================
	edge2@edge_server2:~/apps/demoedge$ docker ps
	CONTAINER ID        IMAGE                                         COMMAND                  CREATED             STATUS              PORTS                    NAMES
	f3c035cd2b12        192.168.0.173:5000/biot/edge-web:latest       "/entrypoint.sh"         9 seconds ago       Up 7 seconds        0.0.0.0:8080->80/tcp     edge-web
	d024f002961e        192.168.0.173:5000/biot/edge-central:latest   "/entrypoint.sh"         6 minutes ago       Up 6 minutes                                 edge_central.1.ipmpd2dgnryhbkanp5zs54hsw
	e9d29140a06e        registry:2.5                                  "/entrypoint.sh /etc…"   21 minutes ago      Up 6 minutes        0.0.0.0:5000->5000/tcp   registry
	821bc351832b        sds.redii.net/biot/postgres:10.2-alpine       "docker-entrypoint.s…"   29 minutes ago      Up 6 minutes        0.0.0.0:5432->5432/tcp   zen_shannon
====================================================================================

9. local pc에서 hosts파일 수정
	192.168.0.173 demoedge.sds.co.kr:8080
	


=======================================


참고-----------------------------------
* edge-web.tgz 갱신하는 경우
docker load < edge-web.tgz
docker rmi <image-name> //기존이미지 삭제
docker tag sds.redii.net/biot/edge-web:latest localhost:5000/biot/edge-web:latest
docker push localhost:5000/biot/edge-web:latest






install =========================================================================
1. install.sh실행하기 위해 docker swarm init 수행 (멀티IP를 갖고 있어서 옵션 사용)
$ docker swarm init --advertise-addr 192.168.0.185
Swarm initialized: current node (27p7zg871l8ogbjepbl42cjj8) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2nij6duj4tu6z3zjgvk0x1yh4aelaz6impejdc4w08ejmlu5l6-cciehbycaiqbxktrbjgbm6gtk 192.168.0.185:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

2. intall.sh 실행






초기화 ================================================================================================

도커 컨테이너 다 내리고
apps/registry 삭제
docker system prune -a   --> 도커 내용 전부 삭제

================================================================================================



DB 변경 ================================================================================================
docker stack rm edge  --> manager 내려감
app  . properties
--> DB 변경
================================================================================================


* pc에서 크롬 실행 후 F12, shift+ctrl+r 입력하여 캐시 삭제
